 attribute vec4 position;
 //attribute vec2 inputTextureCoordinate;
 
 uniform mat4 uMVPMatrix;
 uniform float texelWidthOffset;
 uniform float texelHeightOffset;
 
 varying vec2 centerTextureCoordinate;
 varying vec2 oneStepLeftTextureCoordinate;
 varying vec2 twoStepsLeftTextureCoordinate;
 varying vec2 threeStepsLeftTextureCoordinate;
 varying vec2 fourStepsLeftTextureCoordinate;
 varying vec2 oneStepRightTextureCoordinate;
 varying vec2 twoStepsRightTextureCoordinate;
 varying vec2 threeStepsRightTextureCoordinate;
 varying vec2 fourStepsRightTextureCoordinate;
 
 void main()
 {
     gl_Position = uMVPMatrix * position;
     vec2 inputTextureCoordinate = position.xy;    
     vec2 firstOffset = vec2(0, 1.5 * texelHeightOffset);
     vec2 secondOffset = vec2(0, 3.5 * texelHeightOffset);
     vec2 thirdOffset = vec2(0, 5.5 * texelHeightOffset);
     vec2 fourOffset = vec2(0, 7.5 * texelHeightOffset);
     
     centerTextureCoordinate = inputTextureCoordinate;
     oneStepLeftTextureCoordinate = inputTextureCoordinate - firstOffset;
     twoStepsLeftTextureCoordinate = inputTextureCoordinate - secondOffset;
     threeStepsLeftTextureCoordinate = inputTextureCoordinate - thirdOffset;
     fourStepsLeftTextureCoordinate = inputTextureCoordinate - fourOffset;
     oneStepRightTextureCoordinate = inputTextureCoordinate + firstOffset;
     twoStepsRightTextureCoordinate = inputTextureCoordinate + secondOffset;
     threeStepsRightTextureCoordinate = inputTextureCoordinate + thirdOffset;
     fourStepsRightTextureCoordinate = inputTextureCoordinate + fourOffset;
 }